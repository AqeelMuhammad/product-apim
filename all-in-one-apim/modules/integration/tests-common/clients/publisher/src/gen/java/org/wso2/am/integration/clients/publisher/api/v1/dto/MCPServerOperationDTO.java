/*
 * WSO2 API Manager - Publisher API
 * This document specifies a **RESTful API** for WSO2 **API Manager** - **Publisher**.  # Authentication The Publisher REST API is protected using OAuth2 and access control is achieved through scopes. Before you start invoking the the API you need to obtain an access token with the required scopes. This guide will walk you through the steps that you will need to follow to obtain an access token. First you need to obtain the consumer key/secret key pair by calling the dynamic client registration (DCR) endpoint. You can add your preferred grant types in the payload. A Sample payload is shown below. ```   {   \"callbackUrl\":\"www.google.lk\",   \"clientName\":\"rest_api_publisher\",   \"owner\":\"admin\",   \"grantType\":\"client_credentials password refresh_token\",   \"saasApp\":true   } ``` Create a file (payload.json) with the above sample payload, and use the cURL shown bellow to invoke the DCR endpoint. Authorization header of this should contain the base64 encoded admin username and password. **Format of the request** ```   curl -X POST -H \"Authorization: Basic Base64(admin_username:admin_password)\" -H \"Content-Type: application/json\"   \\ -d @payload.json https://<host>:<servlet_port>/client-registration/v0.17/register ``` **Sample request** ```   curl -X POST -H \"Authorization: Basic YWRtaW46YWRtaW4=\" -H \"Content-Type: application/json\"   \\ -d @payload.json https://localhost:9443/client-registration/v0.17/register ``` Following is a sample response after invoking the above curl. ``` { \"clientId\": \"fOCi4vNJ59PpHucC2CAYfYuADdMa\", \"clientName\": \"rest_api_publisher\", \"callBackURL\": \"www.google.lk\", \"clientSecret\": \"a4FwHlq0iCIKVs2MPIIDnepZnYMa\", \"isSaasApplication\": true, \"appOwner\": \"admin\", \"jsonString\": \"{\\\"grant_types\\\":\\\"client_credentials password refresh_token\\\",\\\"redirect_uris\\\":\\\"www.google.lk\\\",\\\"client_name\\\":\\\"rest_api123\\\"}\", \"jsonAppAttribute\": \"{}\", \"tokenType\": null } ``` Next you must use the above client id and secret to obtain the access token. We will be using the password grant type for this, you can use any grant type you desire. You also need to add the proper **scope** when getting the access token. All possible scopes for publisher REST API can be viewed in **OAuth2 Security** section of this document and scope for each resource is given in **authorization** section of resource documentation. Following is the format of the request if you are using the password grant type. ``` curl -k -d \"grant_type=password&username=<admin_username>&password=<admin_passowrd&scope=<scopes seperated by space>\" \\ -H \"Authorization: Basic base64(cliet_id:client_secret)\" \\ https://<host>:<servlet_port>/oauth2/token ``` **Sample request** ``` curl https://localhost:9443/oauth2/token -k \\ -H \"Authorization: Basic Zk9DaTR2Tko1OVBwSHVjQzJDQVlmWXVBRGRNYTphNEZ3SGxxMGlDSUtWczJNUElJRG5lcFpuWU1h\" \\ -d \"grant_type=password&username=admin&password=admin&scope=apim:api_view apim:api_create\" ``` Shown below is a sample response to the above request. ``` { \"access_token\": \"e79bda48-3406-3178-acce-f6e4dbdcbb12\", \"refresh_token\": \"a757795d-e69f-38b8-bd85-9aded677a97c\", \"scope\": \"apim:api_create apim:api_view\", \"token_type\": \"Bearer\", \"expires_in\": 3600 } ``` Now you have a valid access token, which you can use to invoke an API. Navigate through the API descriptions to find the required API, obtain an access token as described above and invoke the API with the authentication header. If you use a different authentication mechanism, this process may change.  # Try out in Postman If you want to try-out the embedded postman collection with \"Run in Postman\" option, please follow the guidelines listed below. * All of the OAuth2 secured endpoints have been configured with an Authorization Bearer header with a parameterized access token. Before invoking any REST API resource make sure you run the `Register DCR Application` and `Generate Access Token` requests to fetch an access token with all required scopes. * Make sure you have an API Manager instance up and running. * Update the `basepath` parameter to match the hostname and port of the APIM instance.  [![Run in Postman](https://run.pstmn.io/button.svg)](https://app.getpostman.com/run-collection/a09044034b5c3c1b01a9) 
 *
 * The version of the OpenAPI document: v4
 * Contact: architecture@wso2.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.wso2.am.integration.clients.publisher.api.v1.dto;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.wso2.am.integration.clients.publisher.api.v1.dto.APIOperationMappingDTO;
import org.wso2.am.integration.clients.publisher.api.v1.dto.APIOperationPoliciesDTO;
import org.wso2.am.integration.clients.publisher.api.v1.dto.BackendOperationMappingDTO;
import com.fasterxml.jackson.annotation.JsonCreator;
/**
* MCPServerOperationDTO
*/

public class MCPServerOperationDTO {
        public static final String SERIALIZED_NAME_ID = "id";
        @SerializedName(SERIALIZED_NAME_ID)
            private String id;

        public static final String SERIALIZED_NAME_TARGET = "target";
        @SerializedName(SERIALIZED_NAME_TARGET)
            private String target;

            /**
* Operation type for MCP Server (e.g., TOOL)
*/
    @JsonAdapter(FeatureEnum.Adapter.class)
public enum FeatureEnum {
        TOOL("TOOL");

private String value;

FeatureEnum(String value) {
this.value = value;
}

public String getValue() {
return value;
}

@Override
public String toString() {
return String.valueOf(value);
}

public static FeatureEnum fromValue(String value) {
    for (FeatureEnum b : FeatureEnum.values()) {
    if (b.name().equals(value)) {
        return b;
    }
}
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
}

    public static class Adapter extends TypeAdapter<FeatureEnum> {
    @Override
    public void write(final JsonWriter jsonWriter, final FeatureEnum enumeration) throws IOException {
    jsonWriter.value(enumeration.getValue());
    }

    @Override
    public FeatureEnum read(final JsonReader jsonReader) throws IOException {
    String value =  jsonReader.nextString();
    return FeatureEnum.fromValue(value);
    }
    }
}

        public static final String SERIALIZED_NAME_FEATURE = "feature";
        @SerializedName(SERIALIZED_NAME_FEATURE)
            private FeatureEnum feature;

        public static final String SERIALIZED_NAME_AUTH_TYPE = "authType";
        @SerializedName(SERIALIZED_NAME_AUTH_TYPE)
            private String authType = "Any";

        public static final String SERIALIZED_NAME_THROTTLING_POLICY = "throttlingPolicy";
        @SerializedName(SERIALIZED_NAME_THROTTLING_POLICY)
            private String throttlingPolicy;

        public static final String SERIALIZED_NAME_SCOPES = "scopes";
        @SerializedName(SERIALIZED_NAME_SCOPES)
            private List<String> scopes = null;

        public static final String SERIALIZED_NAME_PAYLOAD_SCHEMA = "payloadSchema";
        @SerializedName(SERIALIZED_NAME_PAYLOAD_SCHEMA)
            private String payloadSchema;

        public static final String SERIALIZED_NAME_URI_MAPPING = "uriMapping";
        @SerializedName(SERIALIZED_NAME_URI_MAPPING)
            private String uriMapping;

        public static final String SERIALIZED_NAME_SCHEMA_DEFINITION = "schemaDefinition";
        @SerializedName(SERIALIZED_NAME_SCHEMA_DEFINITION)
            private String schemaDefinition;

        public static final String SERIALIZED_NAME_DESCRIPTION = "description";
        @SerializedName(SERIALIZED_NAME_DESCRIPTION)
            private String description;

        public static final String SERIALIZED_NAME_OPERATION_POLICIES = "operationPolicies";
        @SerializedName(SERIALIZED_NAME_OPERATION_POLICIES)
            private APIOperationPoliciesDTO operationPolicies;

        public static final String SERIALIZED_NAME_BACKEND_OPERATION_MAPPING = "backendOperationMapping";
        @SerializedName(SERIALIZED_NAME_BACKEND_OPERATION_MAPPING)
            private BackendOperationMappingDTO backendOperationMapping;

        public static final String SERIALIZED_NAME_API_OPERATION_MAPPING = "apiOperationMapping";
        @SerializedName(SERIALIZED_NAME_API_OPERATION_MAPPING)
            private APIOperationMappingDTO apiOperationMapping;


        public MCPServerOperationDTO id(String id) {
        
        this.id = id;
        return this;
        }

    /**
        * Get id
    * @return id
    **/
        @javax.annotation.Nullable
      @ApiModelProperty(example = "postapiresource", value = "")
    
    public String getId() {
        return id;
    }


    public void setId(String id) {
        this.id = id;
    }


        public MCPServerOperationDTO target(String target) {
        
        this.target = target;
        return this;
        }

    /**
        * Get target
    * @return target
    **/
        @javax.annotation.Nullable
      @ApiModelProperty(example = "listBooks", value = "")
    
    public String getTarget() {
        return target;
    }


    public void setTarget(String target) {
        this.target = target;
    }


        public MCPServerOperationDTO feature(FeatureEnum feature) {
        
        this.feature = feature;
        return this;
        }

    /**
        * Operation type for MCP Server (e.g., TOOL)
    * @return feature
    **/
        @javax.annotation.Nullable
      @ApiModelProperty(value = "Operation type for MCP Server (e.g., TOOL)")
    
    public FeatureEnum getFeature() {
        return feature;
    }


    public void setFeature(FeatureEnum feature) {
        this.feature = feature;
    }


        public MCPServerOperationDTO authType(String authType) {
        
        this.authType = authType;
        return this;
        }

    /**
        * Get authType
    * @return authType
    **/
        @javax.annotation.Nullable
      @ApiModelProperty(example = "Application & Application User", value = "")
    
    public String getAuthType() {
        return authType;
    }


    public void setAuthType(String authType) {
        this.authType = authType;
    }


        public MCPServerOperationDTO throttlingPolicy(String throttlingPolicy) {
        
        this.throttlingPolicy = throttlingPolicy;
        return this;
        }

    /**
        * Get throttlingPolicy
    * @return throttlingPolicy
    **/
        @javax.annotation.Nullable
      @ApiModelProperty(example = "Unlimited", value = "")
    
    public String getThrottlingPolicy() {
        return throttlingPolicy;
    }


    public void setThrottlingPolicy(String throttlingPolicy) {
        this.throttlingPolicy = throttlingPolicy;
    }


        public MCPServerOperationDTO scopes(List<String> scopes) {
        
        this.scopes = scopes;
        return this;
        }

    /**
        * Get scopes
    * @return scopes
    **/
        @javax.annotation.Nullable
      @ApiModelProperty(example = "[]", value = "")
    
    public List<String> getScopes() {
        return scopes;
    }


    public void setScopes(List<String> scopes) {
        this.scopes = scopes;
    }


        public MCPServerOperationDTO payloadSchema(String payloadSchema) {
        
        this.payloadSchema = payloadSchema;
        return this;
        }

    /**
        * Get payloadSchema
    * @return payloadSchema
    **/
        @javax.annotation.Nullable
      @ApiModelProperty(value = "")
    
    public String getPayloadSchema() {
        return payloadSchema;
    }


    public void setPayloadSchema(String payloadSchema) {
        this.payloadSchema = payloadSchema;
    }


        public MCPServerOperationDTO uriMapping(String uriMapping) {
        
        this.uriMapping = uriMapping;
        return this;
        }

    /**
        * Get uriMapping
    * @return uriMapping
    **/
        @javax.annotation.Nullable
      @ApiModelProperty(value = "")
    
    public String getUriMapping() {
        return uriMapping;
    }


    public void setUriMapping(String uriMapping) {
        this.uriMapping = uriMapping;
    }


        public MCPServerOperationDTO schemaDefinition(String schemaDefinition) {
        
        this.schemaDefinition = schemaDefinition;
        return this;
        }

    /**
        * Get schemaDefinition
    * @return schemaDefinition
    **/
        @javax.annotation.Nullable
      @ApiModelProperty(value = "")
    
    public String getSchemaDefinition() {
        return schemaDefinition;
    }


    public void setSchemaDefinition(String schemaDefinition) {
        this.schemaDefinition = schemaDefinition;
    }


        public MCPServerOperationDTO description(String description) {
        
        this.description = description;
        return this;
        }

    /**
        * Get description
    * @return description
    **/
        @javax.annotation.Nullable
      @ApiModelProperty(example = "this is an operation of get orderId", value = "")
    
    public String getDescription() {
        return description;
    }


    public void setDescription(String description) {
        this.description = description;
    }


        public MCPServerOperationDTO operationPolicies(APIOperationPoliciesDTO operationPolicies) {
        
        this.operationPolicies = operationPolicies;
        return this;
        }

    /**
        * Get operationPolicies
    * @return operationPolicies
    **/
        @javax.annotation.Nullable
      @ApiModelProperty(value = "")
    
    public APIOperationPoliciesDTO getOperationPolicies() {
        return operationPolicies;
    }


    public void setOperationPolicies(APIOperationPoliciesDTO operationPolicies) {
        this.operationPolicies = operationPolicies;
    }


        public MCPServerOperationDTO backendOperationMapping(BackendOperationMappingDTO backendOperationMapping) {
        
        this.backendOperationMapping = backendOperationMapping;
        return this;
        }

    /**
        * Get backendOperationMapping
    * @return backendOperationMapping
    **/
        @javax.annotation.Nullable
      @ApiModelProperty(value = "")
    
    public BackendOperationMappingDTO getBackendOperationMapping() {
        return backendOperationMapping;
    }


    public void setBackendOperationMapping(BackendOperationMappingDTO backendOperationMapping) {
        this.backendOperationMapping = backendOperationMapping;
    }


        public MCPServerOperationDTO apiOperationMapping(APIOperationMappingDTO apiOperationMapping) {
        
        this.apiOperationMapping = apiOperationMapping;
        return this;
        }

    /**
        * Get apiOperationMapping
    * @return apiOperationMapping
    **/
        @javax.annotation.Nullable
      @ApiModelProperty(value = "")
    
    public APIOperationMappingDTO getApiOperationMapping() {
        return apiOperationMapping;
    }


    public void setApiOperationMapping(APIOperationMappingDTO apiOperationMapping) {
        this.apiOperationMapping = apiOperationMapping;
    }


    @Override
    public boolean equals(Object o) {
        if (this == o) {
        return true;
        }
        if (o == null || getClass() != o.getClass()) {
        return false;
        }
            MCPServerOperationDTO mcPServerOperation = (MCPServerOperationDTO) o;
            return Objects.equals(this.id, mcPServerOperation.id) &&
            Objects.equals(this.target, mcPServerOperation.target) &&
            Objects.equals(this.feature, mcPServerOperation.feature) &&
            Objects.equals(this.authType, mcPServerOperation.authType) &&
            Objects.equals(this.throttlingPolicy, mcPServerOperation.throttlingPolicy) &&
            Objects.equals(this.scopes, mcPServerOperation.scopes) &&
            Objects.equals(this.payloadSchema, mcPServerOperation.payloadSchema) &&
            Objects.equals(this.uriMapping, mcPServerOperation.uriMapping) &&
            Objects.equals(this.schemaDefinition, mcPServerOperation.schemaDefinition) &&
            Objects.equals(this.description, mcPServerOperation.description) &&
            Objects.equals(this.operationPolicies, mcPServerOperation.operationPolicies) &&
            Objects.equals(this.backendOperationMapping, mcPServerOperation.backendOperationMapping) &&
            Objects.equals(this.apiOperationMapping, mcPServerOperation.apiOperationMapping);
    }

    @Override
    public int hashCode() {
        return Objects.hash(id, target, feature, authType, throttlingPolicy, scopes, payloadSchema, uriMapping, schemaDefinition, description, operationPolicies, backendOperationMapping, apiOperationMapping);
    }


@Override
public String toString() {
StringBuilder sb = new StringBuilder();
sb.append("class MCPServerOperationDTO {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    target: ").append(toIndentedString(target)).append("\n");
    sb.append("    feature: ").append(toIndentedString(feature)).append("\n");
    sb.append("    authType: ").append(toIndentedString(authType)).append("\n");
    sb.append("    throttlingPolicy: ").append(toIndentedString(throttlingPolicy)).append("\n");
    sb.append("    scopes: ").append(toIndentedString(scopes)).append("\n");
    sb.append("    payloadSchema: ").append(toIndentedString(payloadSchema)).append("\n");
    sb.append("    uriMapping: ").append(toIndentedString(uriMapping)).append("\n");
    sb.append("    schemaDefinition: ").append(toIndentedString(schemaDefinition)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    operationPolicies: ").append(toIndentedString(operationPolicies)).append("\n");
    sb.append("    backendOperationMapping: ").append(toIndentedString(backendOperationMapping)).append("\n");
    sb.append("    apiOperationMapping: ").append(toIndentedString(apiOperationMapping)).append("\n");
sb.append("}");
return sb.toString();
}

/**
* Convert the given object to string with each line indented by 4 spaces
* (except the first line).
*/
private String toIndentedString(Object o) {
if (o == null) {
return "null";
}
return o.toString().replace("\n", "\n    ");
}

}

