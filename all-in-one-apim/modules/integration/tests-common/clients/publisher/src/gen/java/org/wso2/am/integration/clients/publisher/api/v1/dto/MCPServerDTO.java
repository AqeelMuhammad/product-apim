/*
 * WSO2 API Manager - Publisher API
 * This document specifies a **RESTful API** for WSO2 **API Manager** - **Publisher**.  # Authentication The Publisher REST API is protected using OAuth2 and access control is achieved through scopes. Before you start invoking the the API you need to obtain an access token with the required scopes. This guide will walk you through the steps that you will need to follow to obtain an access token. First you need to obtain the consumer key/secret key pair by calling the dynamic client registration (DCR) endpoint. You can add your preferred grant types in the payload. A Sample payload is shown below. ```   {   \"callbackUrl\":\"www.google.lk\",   \"clientName\":\"rest_api_publisher\",   \"owner\":\"admin\",   \"grantType\":\"client_credentials password refresh_token\",   \"saasApp\":true   } ``` Create a file (payload.json) with the above sample payload, and use the cURL shown bellow to invoke the DCR endpoint. Authorization header of this should contain the base64 encoded admin username and password. **Format of the request** ```   curl -X POST -H \"Authorization: Basic Base64(admin_username:admin_password)\" -H \"Content-Type: application/json\"   \\ -d @payload.json https://<host>:<servlet_port>/client-registration/v0.17/register ``` **Sample request** ```   curl -X POST -H \"Authorization: Basic YWRtaW46YWRtaW4=\" -H \"Content-Type: application/json\"   \\ -d @payload.json https://localhost:9443/client-registration/v0.17/register ``` Following is a sample response after invoking the above curl. ``` { \"clientId\": \"fOCi4vNJ59PpHucC2CAYfYuADdMa\", \"clientName\": \"rest_api_publisher\", \"callBackURL\": \"www.google.lk\", \"clientSecret\": \"a4FwHlq0iCIKVs2MPIIDnepZnYMa\", \"isSaasApplication\": true, \"appOwner\": \"admin\", \"jsonString\": \"{\\\"grant_types\\\":\\\"client_credentials password refresh_token\\\",\\\"redirect_uris\\\":\\\"www.google.lk\\\",\\\"client_name\\\":\\\"rest_api123\\\"}\", \"jsonAppAttribute\": \"{}\", \"tokenType\": null } ``` Next you must use the above client id and secret to obtain the access token. We will be using the password grant type for this, you can use any grant type you desire. You also need to add the proper **scope** when getting the access token. All possible scopes for publisher REST API can be viewed in **OAuth2 Security** section of this document and scope for each resource is given in **authorization** section of resource documentation. Following is the format of the request if you are using the password grant type. ``` curl -k -d \"grant_type=password&username=<admin_username>&password=<admin_passowrd&scope=<scopes seperated by space>\" \\ -H \"Authorization: Basic base64(cliet_id:client_secret)\" \\ https://<host>:<servlet_port>/oauth2/token ``` **Sample request** ``` curl https://localhost:9443/oauth2/token -k \\ -H \"Authorization: Basic Zk9DaTR2Tko1OVBwSHVjQzJDQVlmWXVBRGRNYTphNEZ3SGxxMGlDSUtWczJNUElJRG5lcFpuWU1h\" \\ -d \"grant_type=password&username=admin&password=admin&scope=apim:api_view apim:api_create\" ``` Shown below is a sample response to the above request. ``` { \"access_token\": \"e79bda48-3406-3178-acce-f6e4dbdcbb12\", \"refresh_token\": \"a757795d-e69f-38b8-bd85-9aded677a97c\", \"scope\": \"apim:api_create apim:api_view\", \"token_type\": \"Bearer\", \"expires_in\": 3600 } ``` Now you have a valid access token, which you can use to invoke an API. Navigate through the API descriptions to find the required API, obtain an access token as described above and invoke the API with the authentication header. If you use a different authentication mechanism, this process may change.  # Try out in Postman If you want to try-out the embedded postman collection with \"Run in Postman\" option, please follow the guidelines listed below. * All of the OAuth2 secured endpoints have been configured with an Authorization Bearer header with a parameterized access token. Before invoking any REST API resource make sure you run the `Register DCR Application` and `Generate Access Token` requests to fetch an access token with all required scopes. * Make sure you have an API Manager instance up and running. * Update the `basepath` parameter to match the hostname and port of the APIM instance.  [![Run in Postman](https://run.pstmn.io/button.svg)](https://app.getpostman.com/run-collection/a09044034b5c3c1b01a9) 
 *
 * The version of the OpenAPI document: v4
 * Contact: architecture@wso2.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.wso2.am.integration.clients.publisher.api.v1.dto;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.wso2.am.integration.clients.publisher.api.v1.dto.APIBusinessInformationDTO;
import org.wso2.am.integration.clients.publisher.api.v1.dto.APICorsConfigurationDTO;
import org.wso2.am.integration.clients.publisher.api.v1.dto.APIInfoAdditionalPropertiesMapDTO;
import org.wso2.am.integration.clients.publisher.api.v1.dto.APIMonetizationInfoDTO;
import org.wso2.am.integration.clients.publisher.api.v1.dto.MCPServerOperationDTO;
import org.wso2.am.integration.clients.publisher.api.v1.dto.MCPServerOperationPoliciesDTO;
import org.wso2.am.integration.clients.publisher.api.v1.dto.MCPServerScopeDTO;
import org.wso2.am.integration.clients.publisher.api.v1.dto.MaxTpsDTO;
import org.wso2.am.integration.clients.publisher.api.v1.dto.OrganizationPoliciesDTO;
import org.wso2.am.integration.clients.publisher.api.v1.dto.SubtypeConfigurationDTO;
import com.fasterxml.jackson.annotation.JsonCreator;
/**
* MCPServerDTO
*/

public class MCPServerDTO {
        public static final String SERIALIZED_NAME_ID = "id";
        @SerializedName(SERIALIZED_NAME_ID)
            private String id;

        public static final String SERIALIZED_NAME_NAME = "name";
        @SerializedName(SERIALIZED_NAME_NAME)
            private String name;

        public static final String SERIALIZED_NAME_DISPLAY_NAME = "displayName";
        @SerializedName(SERIALIZED_NAME_DISPLAY_NAME)
            private String displayName;

        public static final String SERIALIZED_NAME_DESCRIPTION = "description";
        @SerializedName(SERIALIZED_NAME_DESCRIPTION)
            private String description;

        public static final String SERIALIZED_NAME_CONTEXT = "context";
        @SerializedName(SERIALIZED_NAME_CONTEXT)
            private String context;

        public static final String SERIALIZED_NAME_ENDPOINT_CONFIG = "endpointConfig";
        @SerializedName(SERIALIZED_NAME_ENDPOINT_CONFIG)
            private Object endpointConfig;

        public static final String SERIALIZED_NAME_VERSION = "version";
        @SerializedName(SERIALIZED_NAME_VERSION)
            private String version;

        public static final String SERIALIZED_NAME_PROVIDER = "provider";
        @SerializedName(SERIALIZED_NAME_PROVIDER)
            private String provider;

        public static final String SERIALIZED_NAME_LIFE_CYCLE_STATUS = "lifeCycleStatus";
        @SerializedName(SERIALIZED_NAME_LIFE_CYCLE_STATUS)
            private String lifeCycleStatus;

        public static final String SERIALIZED_NAME_HAS_THUMBNAIL = "hasThumbnail";
        @SerializedName(SERIALIZED_NAME_HAS_THUMBNAIL)
            private Boolean hasThumbnail;

        public static final String SERIALIZED_NAME_IS_DEFAULT_VERSION = "isDefaultVersion";
        @SerializedName(SERIALIZED_NAME_IS_DEFAULT_VERSION)
            private Boolean isDefaultVersion;

        public static final String SERIALIZED_NAME_IS_REVISION = "isRevision";
        @SerializedName(SERIALIZED_NAME_IS_REVISION)
            private Boolean isRevision;

        public static final String SERIALIZED_NAME_REVISIONED_M_C_P_SERVER_ID = "revisionedMCPServerId";
        @SerializedName(SERIALIZED_NAME_REVISIONED_M_C_P_SERVER_ID)
            private String revisionedMCPServerId;

        public static final String SERIALIZED_NAME_REVISION_ID = "revisionId";
        @SerializedName(SERIALIZED_NAME_REVISION_ID)
            private Integer revisionId;

        public static final String SERIALIZED_NAME_ENABLE_SCHEMA_VALIDATION = "enableSchemaValidation";
        @SerializedName(SERIALIZED_NAME_ENABLE_SCHEMA_VALIDATION)
            private Boolean enableSchemaValidation;

        public static final String SERIALIZED_NAME_AUDIENCES = "audiences";
        @SerializedName(SERIALIZED_NAME_AUDIENCES)
            private List<String> audiences = null;

        public static final String SERIALIZED_NAME_TRANSPORT = "transport";
        @SerializedName(SERIALIZED_NAME_TRANSPORT)
            private List<String> transport = null;

        public static final String SERIALIZED_NAME_TAGS = "tags";
        @SerializedName(SERIALIZED_NAME_TAGS)
            private List<String> tags = null;

        public static final String SERIALIZED_NAME_POLICIES = "policies";
        @SerializedName(SERIALIZED_NAME_POLICIES)
            private List<String> policies = null;

        public static final String SERIALIZED_NAME_ORGANIZATION_POLICIES = "organizationPolicies";
        @SerializedName(SERIALIZED_NAME_ORGANIZATION_POLICIES)
            private List<OrganizationPoliciesDTO> organizationPolicies = null;

        public static final String SERIALIZED_NAME_THROTTLING_POLICY = "throttlingPolicy";
        @SerializedName(SERIALIZED_NAME_THROTTLING_POLICY)
            private String throttlingPolicy;

        public static final String SERIALIZED_NAME_AUTHORIZATION_HEADER = "authorizationHeader";
        @SerializedName(SERIALIZED_NAME_AUTHORIZATION_HEADER)
            private String authorizationHeader;

        public static final String SERIALIZED_NAME_API_KEY_HEADER = "apiKeyHeader";
        @SerializedName(SERIALIZED_NAME_API_KEY_HEADER)
            private String apiKeyHeader;

        public static final String SERIALIZED_NAME_SECURITY_SCHEME = "securityScheme";
        @SerializedName(SERIALIZED_NAME_SECURITY_SCHEME)
            private List<String> securityScheme = null;

        public static final String SERIALIZED_NAME_MAX_TPS = "maxTps";
        @SerializedName(SERIALIZED_NAME_MAX_TPS)
            private MaxTpsDTO maxTps;

            /**
* The visibility level of the MCP Server. Accepts one of the following: PUBLIC, PRIVATE, RESTRICTED. 
*/
    @JsonAdapter(VisibilityEnum.Adapter.class)
public enum VisibilityEnum {
        PUBLIC("PUBLIC"),
        
        PRIVATE("PRIVATE"),
        
        RESTRICTED("RESTRICTED");

private String value;

VisibilityEnum(String value) {
this.value = value;
}

public String getValue() {
return value;
}

@Override
public String toString() {
return String.valueOf(value);
}

public static VisibilityEnum fromValue(String value) {
    for (VisibilityEnum b : VisibilityEnum.values()) {
    if (b.name().equals(value)) {
        return b;
    }
}
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
}

    public static class Adapter extends TypeAdapter<VisibilityEnum> {
    @Override
    public void write(final JsonWriter jsonWriter, final VisibilityEnum enumeration) throws IOException {
    jsonWriter.value(enumeration.getValue());
    }

    @Override
    public VisibilityEnum read(final JsonReader jsonReader) throws IOException {
    String value =  jsonReader.nextString();
    return VisibilityEnum.fromValue(value);
    }
    }
}

        public static final String SERIALIZED_NAME_VISIBILITY = "visibility";
        @SerializedName(SERIALIZED_NAME_VISIBILITY)
            private VisibilityEnum visibility = VisibilityEnum.PUBLIC;

        public static final String SERIALIZED_NAME_VISIBLE_ROLES = "visibleRoles";
        @SerializedName(SERIALIZED_NAME_VISIBLE_ROLES)
            private List<String> visibleRoles = null;

        public static final String SERIALIZED_NAME_VISIBLE_TENANTS = "visibleTenants";
        @SerializedName(SERIALIZED_NAME_VISIBLE_TENANTS)
            private List<String> visibleTenants = null;

        public static final String SERIALIZED_NAME_VISIBLE_ORGANIZATIONS = "visibleOrganizations";
        @SerializedName(SERIALIZED_NAME_VISIBLE_ORGANIZATIONS)
            private List<String> visibleOrganizations = null;

        public static final String SERIALIZED_NAME_MCP_SERVER_POLICIES = "mcpServerPolicies";
        @SerializedName(SERIALIZED_NAME_MCP_SERVER_POLICIES)
            private MCPServerOperationPoliciesDTO mcpServerPolicies;

            /**
* The subscription availability. Accepts one of the following: CURRENT_TENANT, ALL_TENANTS, or  SPECIFIC_TENANTS. 
*/
    @JsonAdapter(SubscriptionAvailabilityEnum.Adapter.class)
public enum SubscriptionAvailabilityEnum {
        CURRENT_TENANT("CURRENT_TENANT"),
        
        ALL_TENANTS("ALL_TENANTS"),
        
        SPECIFIC_TENANTS("SPECIFIC_TENANTS");

private String value;

SubscriptionAvailabilityEnum(String value) {
this.value = value;
}

public String getValue() {
return value;
}

@Override
public String toString() {
return String.valueOf(value);
}

public static SubscriptionAvailabilityEnum fromValue(String value) {
    for (SubscriptionAvailabilityEnum b : SubscriptionAvailabilityEnum.values()) {
    if (b.name().equals(value)) {
        return b;
    }
}
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
}

    public static class Adapter extends TypeAdapter<SubscriptionAvailabilityEnum> {
    @Override
    public void write(final JsonWriter jsonWriter, final SubscriptionAvailabilityEnum enumeration) throws IOException {
    jsonWriter.value(enumeration.getValue());
    }

    @Override
    public SubscriptionAvailabilityEnum read(final JsonReader jsonReader) throws IOException {
    String value =  jsonReader.nextString();
    return SubscriptionAvailabilityEnum.fromValue(value);
    }
    }
}

        public static final String SERIALIZED_NAME_SUBSCRIPTION_AVAILABILITY = "subscriptionAvailability";
        @SerializedName(SERIALIZED_NAME_SUBSCRIPTION_AVAILABILITY)
            private SubscriptionAvailabilityEnum subscriptionAvailability = SubscriptionAvailabilityEnum.CURRENT_TENANT;

        public static final String SERIALIZED_NAME_SUBSCRIPTION_AVAILABLE_TENANTS = "subscriptionAvailableTenants";
        @SerializedName(SERIALIZED_NAME_SUBSCRIPTION_AVAILABLE_TENANTS)
            private List<String> subscriptionAvailableTenants = null;

        public static final String SERIALIZED_NAME_ADDITIONAL_PROPERTIES_MAP = "additionalPropertiesMap";
        @SerializedName(SERIALIZED_NAME_ADDITIONAL_PROPERTIES_MAP)
            private Map<String, APIInfoAdditionalPropertiesMapDTO> additionalPropertiesMap = null;

        public static final String SERIALIZED_NAME_MONETIZATION = "monetization";
        @SerializedName(SERIALIZED_NAME_MONETIZATION)
            private APIMonetizationInfoDTO monetization;

            /**
* Is the MCP server restricted to certain publishers or creators or is it visible to all publishers and  creators. If the accessControl restriction is NONE, this can be modified by all publishers and creators. Otherwise, it can only be viewable/modifiable by a specific set of users based on the restriction. 
*/
    @JsonAdapter(AccessControlEnum.Adapter.class)
public enum AccessControlEnum {
        NONE("NONE"),
        
        RESTRICTED("RESTRICTED");

private String value;

AccessControlEnum(String value) {
this.value = value;
}

public String getValue() {
return value;
}

@Override
public String toString() {
return String.valueOf(value);
}

public static AccessControlEnum fromValue(String value) {
    for (AccessControlEnum b : AccessControlEnum.values()) {
    if (b.name().equals(value)) {
        return b;
    }
}
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
}

    public static class Adapter extends TypeAdapter<AccessControlEnum> {
    @Override
    public void write(final JsonWriter jsonWriter, final AccessControlEnum enumeration) throws IOException {
    jsonWriter.value(enumeration.getValue());
    }

    @Override
    public AccessControlEnum read(final JsonReader jsonReader) throws IOException {
    String value =  jsonReader.nextString();
    return AccessControlEnum.fromValue(value);
    }
    }
}

        public static final String SERIALIZED_NAME_ACCESS_CONTROL = "accessControl";
        @SerializedName(SERIALIZED_NAME_ACCESS_CONTROL)
            private AccessControlEnum accessControl = AccessControlEnum.NONE;

        public static final String SERIALIZED_NAME_ACCESS_CONTROL_ROLES = "accessControlRoles";
        @SerializedName(SERIALIZED_NAME_ACCESS_CONTROL_ROLES)
            private List<String> accessControlRoles = null;

        public static final String SERIALIZED_NAME_BUSINESS_INFORMATION = "businessInformation";
        @SerializedName(SERIALIZED_NAME_BUSINESS_INFORMATION)
            private APIBusinessInformationDTO businessInformation = null;

        public static final String SERIALIZED_NAME_CORS_CONFIGURATION = "corsConfiguration";
        @SerializedName(SERIALIZED_NAME_CORS_CONFIGURATION)
            private APICorsConfigurationDTO corsConfiguration;

        public static final String SERIALIZED_NAME_WORKFLOW_STATUS = "workflowStatus";
        @SerializedName(SERIALIZED_NAME_WORKFLOW_STATUS)
            private String workflowStatus;

        public static final String SERIALIZED_NAME_PROTOCOL_VERSION = "protocolVersion";
        @SerializedName(SERIALIZED_NAME_PROTOCOL_VERSION)
            private String protocolVersion;

        public static final String SERIALIZED_NAME_CREATED_TIME = "createdTime";
        @SerializedName(SERIALIZED_NAME_CREATED_TIME)
            private String createdTime;

        public static final String SERIALIZED_NAME_LAST_UPDATED_TIMESTAMP = "lastUpdatedTimestamp";
        @SerializedName(SERIALIZED_NAME_LAST_UPDATED_TIMESTAMP)
            private String lastUpdatedTimestamp;

        public static final String SERIALIZED_NAME_LAST_UPDATED_TIME = "lastUpdatedTime";
        @SerializedName(SERIALIZED_NAME_LAST_UPDATED_TIME)
            private String lastUpdatedTime;

        public static final String SERIALIZED_NAME_SUBTYPE_CONFIGURATION = "subtypeConfiguration";
        @SerializedName(SERIALIZED_NAME_SUBTYPE_CONFIGURATION)
            private SubtypeConfigurationDTO subtypeConfiguration;

        public static final String SERIALIZED_NAME_SCOPES = "scopes";
        @SerializedName(SERIALIZED_NAME_SCOPES)
            private List<MCPServerScopeDTO> scopes = null;

        public static final String SERIALIZED_NAME_OPERATIONS = "operations";
        @SerializedName(SERIALIZED_NAME_OPERATIONS)
            private List<MCPServerOperationDTO> operations = null;

        public static final String SERIALIZED_NAME_CATEGORIES = "categories";
        @SerializedName(SERIALIZED_NAME_CATEGORIES)
            private List<String> categories = null;

        public static final String SERIALIZED_NAME_KEY_MANAGERS = "keyManagers";
        @SerializedName(SERIALIZED_NAME_KEY_MANAGERS)
            private Object keyManagers;

        public static final String SERIALIZED_NAME_GATEWAY_VENDOR = "gatewayVendor";
        @SerializedName(SERIALIZED_NAME_GATEWAY_VENDOR)
            private String gatewayVendor;

        public static final String SERIALIZED_NAME_GATEWAY_TYPE = "gatewayType";
        @SerializedName(SERIALIZED_NAME_GATEWAY_TYPE)
            private String gatewayType = "wso2/synapse";

        public static final String SERIALIZED_NAME_INITIATED_FROM_GATEWAY = "initiatedFromGateway";
        @SerializedName(SERIALIZED_NAME_INITIATED_FROM_GATEWAY)
            private Boolean initiatedFromGateway = false;


        public MCPServerDTO id(String id) {
        
        this.id = id;
        return this;
        }

    /**
        * UUID of the MCP Server
    * @return id
    **/
        @javax.annotation.Nullable
      @ApiModelProperty(example = "01234567-0123-0123-0123-012345678901", value = "UUID of the MCP Server")
    
    public String getId() {
        return id;
    }


    public void setId(String id) {
        this.id = id;
    }


        public MCPServerDTO name(String name) {
        
        this.name = name;
        return this;
        }

    /**
        * Get name
    * @return name
    **/
      @ApiModelProperty(example = "ReadingList", required = true, value = "")
    
    public String getName() {
        return name;
    }


    public void setName(String name) {
        this.name = name;
    }


        public MCPServerDTO displayName(String displayName) {
        
        this.displayName = displayName;
        return this;
        }

    /**
        * Human-friendly name shown in UI. Length limited to DB column size.
    * @return displayName
    **/
        @javax.annotation.Nullable
      @ApiModelProperty(example = "Reading List", value = "Human-friendly name shown in UI. Length limited to DB column size.")
    
    public String getDisplayName() {
        return displayName;
    }


    public void setDisplayName(String displayName) {
        this.displayName = displayName;
    }


        public MCPServerDTO description(String description) {
        
        this.description = description;
        return this;
        }

    /**
        * Get description
    * @return description
    **/
        @javax.annotation.Nullable
      @ApiModelProperty(example = "This is a simple MCP server for a book store.", value = "")
    
    public String getDescription() {
        return description;
    }


    public void setDescription(String description) {
        this.description = description;
    }


        public MCPServerDTO context(String context) {
        
        this.context = context;
        return this;
        }

    /**
        * Get context
    * @return context
    **/
      @ApiModelProperty(example = "books", required = true, value = "")
    
    public String getContext() {
        return context;
    }


    public void setContext(String context) {
        this.context = context;
    }


        public MCPServerDTO endpointConfig(Object endpointConfig) {
        
        this.endpointConfig = endpointConfig;
        return this;
        }

    /**
        * Endpoint configuration of the backend. 
    * @return endpointConfig
    **/
        @javax.annotation.Nullable
      @ApiModelProperty(value = "Endpoint configuration of the backend. ")
    
    public Object getEndpointConfig() {
        return endpointConfig;
    }


    public void setEndpointConfig(Object endpointConfig) {
        this.endpointConfig = endpointConfig;
    }


        public MCPServerDTO version(String version) {
        
        this.version = version;
        return this;
        }

    /**
        * Get version
    * @return version
    **/
      @ApiModelProperty(example = "1.0.0", required = true, value = "")
    
    public String getVersion() {
        return version;
    }


    public void setVersion(String version) {
        this.version = version;
    }


        public MCPServerDTO provider(String provider) {
        
        this.provider = provider;
        return this;
        }

    /**
        * If the provider value is not given user invoking the MCP Server will be used as the provider.
    * @return provider
    **/
        @javax.annotation.Nullable
      @ApiModelProperty(example = "admin", value = "If the provider value is not given user invoking the MCP Server will be used as the provider.")
    
    public String getProvider() {
        return provider;
    }


    public void setProvider(String provider) {
        this.provider = provider;
    }


        public MCPServerDTO lifeCycleStatus(String lifeCycleStatus) {
        
        this.lifeCycleStatus = lifeCycleStatus;
        return this;
        }

    /**
        * Get lifeCycleStatus
    * @return lifeCycleStatus
    **/
        @javax.annotation.Nullable
      @ApiModelProperty(example = "CREATED", value = "")
    
    public String getLifeCycleStatus() {
        return lifeCycleStatus;
    }


    public void setLifeCycleStatus(String lifeCycleStatus) {
        this.lifeCycleStatus = lifeCycleStatus;
    }


        public MCPServerDTO hasThumbnail(Boolean hasThumbnail) {
        
        this.hasThumbnail = hasThumbnail;
        return this;
        }

    /**
        * Get hasThumbnail
    * @return hasThumbnail
    **/
        @javax.annotation.Nullable
      @ApiModelProperty(example = "false", value = "")
    
    public Boolean isHasThumbnail() {
        return hasThumbnail;
    }


    public void setHasThumbnail(Boolean hasThumbnail) {
        this.hasThumbnail = hasThumbnail;
    }


        public MCPServerDTO isDefaultVersion(Boolean isDefaultVersion) {
        
        this.isDefaultVersion = isDefaultVersion;
        return this;
        }

    /**
        * Get isDefaultVersion
    * @return isDefaultVersion
    **/
        @javax.annotation.Nullable
      @ApiModelProperty(example = "false", value = "")
    
    public Boolean isIsDefaultVersion() {
        return isDefaultVersion;
    }


    public void setIsDefaultVersion(Boolean isDefaultVersion) {
        this.isDefaultVersion = isDefaultVersion;
    }


        public MCPServerDTO isRevision(Boolean isRevision) {
        
        this.isRevision = isRevision;
        return this;
        }

    /**
        * Get isRevision
    * @return isRevision
    **/
        @javax.annotation.Nullable
      @ApiModelProperty(example = "false", value = "")
    
    public Boolean isIsRevision() {
        return isRevision;
    }


    public void setIsRevision(Boolean isRevision) {
        this.isRevision = isRevision;
    }


        public MCPServerDTO revisionedMCPServerId(String revisionedMCPServerId) {
        
        this.revisionedMCPServerId = revisionedMCPServerId;
        return this;
        }

    /**
        * UUID of the artifact
    * @return revisionedMCPServerId
    **/
        @javax.annotation.Nullable
      @ApiModelProperty(example = "01234567-0123-0123-0123-012345678901", value = "UUID of the artifact")
    
    public String getRevisionedMCPServerId() {
        return revisionedMCPServerId;
    }


    public void setRevisionedMCPServerId(String revisionedMCPServerId) {
        this.revisionedMCPServerId = revisionedMCPServerId;
    }


        public MCPServerDTO revisionId(Integer revisionId) {
        
        this.revisionId = revisionId;
        return this;
        }

    /**
        * Get revisionId
    * @return revisionId
    **/
        @javax.annotation.Nullable
      @ApiModelProperty(example = "1", value = "")
    
    public Integer getRevisionId() {
        return revisionId;
    }


    public void setRevisionId(Integer revisionId) {
        this.revisionId = revisionId;
    }


        public MCPServerDTO enableSchemaValidation(Boolean enableSchemaValidation) {
        
        this.enableSchemaValidation = enableSchemaValidation;
        return this;
        }

    /**
        * Get enableSchemaValidation
    * @return enableSchemaValidation
    **/
        @javax.annotation.Nullable
      @ApiModelProperty(example = "false", value = "")
    
    public Boolean isEnableSchemaValidation() {
        return enableSchemaValidation;
    }


    public void setEnableSchemaValidation(Boolean enableSchemaValidation) {
        this.enableSchemaValidation = enableSchemaValidation;
    }


        public MCPServerDTO audiences(List<String> audiences) {
        
        this.audiences = audiences;
        return this;
        }

    /**
        * The audiences of the MCP Server for jwt validation. Accepted values are any String values
    * @return audiences
    **/
        @javax.annotation.Nullable
      @ApiModelProperty(value = "The audiences of the MCP Server for jwt validation. Accepted values are any String values")
    
    public List<String> getAudiences() {
        return audiences;
    }


    public void setAudiences(List<String> audiences) {
        this.audiences = audiences;
    }


        public MCPServerDTO transport(List<String> transport) {
        
        this.transport = transport;
        return this;
        }

    /**
        * Supported transports for the MCP Server (http and/or https).
    * @return transport
    **/
        @javax.annotation.Nullable
      @ApiModelProperty(example = "[\"http\",\"https\"]", value = "Supported transports for the MCP Server (http and/or https).")
    
    public List<String> getTransport() {
        return transport;
    }


    public void setTransport(List<String> transport) {
        this.transport = transport;
    }


        public MCPServerDTO tags(List<String> tags) {
        
        this.tags = tags;
        return this;
        }

    /**
        * Get tags
    * @return tags
    **/
        @javax.annotation.Nullable
      @ApiModelProperty(example = "[\"pizza\",\"food\"]", value = "")
    
    public List<String> getTags() {
        return tags;
    }


    public void setTags(List<String> tags) {
        this.tags = tags;
    }


        public MCPServerDTO policies(List<String> policies) {
        
        this.policies = policies;
        return this;
        }

    /**
        * Get policies
    * @return policies
    **/
        @javax.annotation.Nullable
      @ApiModelProperty(example = "[\"Unlimited\"]", value = "")
    
    public List<String> getPolicies() {
        return policies;
    }


    public void setPolicies(List<String> policies) {
        this.policies = policies;
    }


        public MCPServerDTO organizationPolicies(List<OrganizationPoliciesDTO> organizationPolicies) {
        
        this.organizationPolicies = organizationPolicies;
        return this;
        }

    /**
        * Get organizationPolicies
    * @return organizationPolicies
    **/
        @javax.annotation.Nullable
      @ApiModelProperty(value = "")
    
    public List<OrganizationPoliciesDTO> getOrganizationPolicies() {
        return organizationPolicies;
    }


    public void setOrganizationPolicies(List<OrganizationPoliciesDTO> organizationPolicies) {
        this.organizationPolicies = organizationPolicies;
    }


        public MCPServerDTO throttlingPolicy(String throttlingPolicy) {
        
        this.throttlingPolicy = throttlingPolicy;
        return this;
        }

    /**
        * The MCP Server level throttling policy selected.
    * @return throttlingPolicy
    **/
        @javax.annotation.Nullable
      @ApiModelProperty(example = "Unlimited", value = "The MCP Server level throttling policy selected.")
    
    public String getThrottlingPolicy() {
        return throttlingPolicy;
    }


    public void setThrottlingPolicy(String throttlingPolicy) {
        this.throttlingPolicy = throttlingPolicy;
    }


        public MCPServerDTO authorizationHeader(String authorizationHeader) {
        
        this.authorizationHeader = authorizationHeader;
        return this;
        }

    /**
        * Name of the Authorization header used for invoking the MCP Server. If it is not set,  Authorization header name specified in tenant or system level will be used. 
    * @return authorizationHeader
    **/
        @javax.annotation.Nullable
      @ApiModelProperty(example = "Authorization", value = "Name of the Authorization header used for invoking the MCP Server. If it is not set,  Authorization header name specified in tenant or system level will be used. ")
    
    public String getAuthorizationHeader() {
        return authorizationHeader;
    }


    public void setAuthorizationHeader(String authorizationHeader) {
        this.authorizationHeader = authorizationHeader;
    }


        public MCPServerDTO apiKeyHeader(String apiKeyHeader) {
        
        this.apiKeyHeader = apiKeyHeader;
        return this;
        }

    /**
        * Name of the API key header used for invoking the MCP Server. If it is not set, default value&#x60;apiKey&#x60;  will be used. 
    * @return apiKeyHeader
    **/
        @javax.annotation.Nullable
      @ApiModelProperty(example = "apiKey", value = "Name of the API key header used for invoking the MCP Server. If it is not set, default value`apiKey`  will be used. ")
    
    public String getApiKeyHeader() {
        return apiKeyHeader;
    }


    public void setApiKeyHeader(String apiKeyHeader) {
        this.apiKeyHeader = apiKeyHeader;
    }


        public MCPServerDTO securityScheme(List<String> securityScheme) {
        
        this.securityScheme = securityScheme;
        return this;
        }

    /**
        * Types of API security, the current MCP Server secured with. It can be either OAuth2 or mutual SSLor both. If it is not set OAuth2 will be set as the security. 
    * @return securityScheme
    **/
        @javax.annotation.Nullable
      @ApiModelProperty(example = "[\"oauth2\"]", value = "Types of API security, the current MCP Server secured with. It can be either OAuth2 or mutual SSLor both. If it is not set OAuth2 will be set as the security. ")
    
    public List<String> getSecurityScheme() {
        return securityScheme;
    }


    public void setSecurityScheme(List<String> securityScheme) {
        this.securityScheme = securityScheme;
    }


        public MCPServerDTO maxTps(MaxTpsDTO maxTps) {
        
        this.maxTps = maxTps;
        return this;
        }

    /**
        * Get maxTps
    * @return maxTps
    **/
        @javax.annotation.Nullable
      @ApiModelProperty(value = "")
    
    public MaxTpsDTO getMaxTps() {
        return maxTps;
    }


    public void setMaxTps(MaxTpsDTO maxTps) {
        this.maxTps = maxTps;
    }


        public MCPServerDTO visibility(VisibilityEnum visibility) {
        
        this.visibility = visibility;
        return this;
        }

    /**
        * The visibility level of the MCP Server. Accepts one of the following: PUBLIC, PRIVATE, RESTRICTED. 
    * @return visibility
    **/
        @javax.annotation.Nullable
      @ApiModelProperty(example = "PUBLIC", value = "The visibility level of the MCP Server. Accepts one of the following: PUBLIC, PRIVATE, RESTRICTED. ")
    
    public VisibilityEnum getVisibility() {
        return visibility;
    }


    public void setVisibility(VisibilityEnum visibility) {
        this.visibility = visibility;
    }


        public MCPServerDTO visibleRoles(List<String> visibleRoles) {
        
        this.visibleRoles = visibleRoles;
        return this;
        }

    /**
        * The user roles that are able to access the MCP Server in Developer Portal
    * @return visibleRoles
    **/
        @javax.annotation.Nullable
      @ApiModelProperty(example = "[]", value = "The user roles that are able to access the MCP Server in Developer Portal")
    
    public List<String> getVisibleRoles() {
        return visibleRoles;
    }


    public void setVisibleRoles(List<String> visibleRoles) {
        this.visibleRoles = visibleRoles;
    }


        public MCPServerDTO visibleTenants(List<String> visibleTenants) {
        
        this.visibleTenants = visibleTenants;
        return this;
        }

    /**
        * Get visibleTenants
    * @return visibleTenants
    **/
        @javax.annotation.Nullable
      @ApiModelProperty(example = "[]", value = "")
    
    public List<String> getVisibleTenants() {
        return visibleTenants;
    }


    public void setVisibleTenants(List<String> visibleTenants) {
        this.visibleTenants = visibleTenants;
    }


        public MCPServerDTO visibleOrganizations(List<String> visibleOrganizations) {
        
        this.visibleOrganizations = visibleOrganizations;
        return this;
        }

    /**
        * The organizations that are able to access the MCP server in Developer Portal
    * @return visibleOrganizations
    **/
        @javax.annotation.Nullable
      @ApiModelProperty(example = "[]", value = "The organizations that are able to access the MCP server in Developer Portal")
    
    public List<String> getVisibleOrganizations() {
        return visibleOrganizations;
    }


    public void setVisibleOrganizations(List<String> visibleOrganizations) {
        this.visibleOrganizations = visibleOrganizations;
    }


        public MCPServerDTO mcpServerPolicies(MCPServerOperationPoliciesDTO mcpServerPolicies) {
        
        this.mcpServerPolicies = mcpServerPolicies;
        return this;
        }

    /**
        * Get mcpServerPolicies
    * @return mcpServerPolicies
    **/
        @javax.annotation.Nullable
      @ApiModelProperty(value = "")
    
    public MCPServerOperationPoliciesDTO getMcpServerPolicies() {
        return mcpServerPolicies;
    }


    public void setMcpServerPolicies(MCPServerOperationPoliciesDTO mcpServerPolicies) {
        this.mcpServerPolicies = mcpServerPolicies;
    }


        public MCPServerDTO subscriptionAvailability(SubscriptionAvailabilityEnum subscriptionAvailability) {
        
        this.subscriptionAvailability = subscriptionAvailability;
        return this;
        }

    /**
        * The subscription availability. Accepts one of the following: CURRENT_TENANT, ALL_TENANTS, or  SPECIFIC_TENANTS. 
    * @return subscriptionAvailability
    **/
        @javax.annotation.Nullable
      @ApiModelProperty(example = "CURRENT_TENANT", value = "The subscription availability. Accepts one of the following: CURRENT_TENANT, ALL_TENANTS, or  SPECIFIC_TENANTS. ")
    
    public SubscriptionAvailabilityEnum getSubscriptionAvailability() {
        return subscriptionAvailability;
    }


    public void setSubscriptionAvailability(SubscriptionAvailabilityEnum subscriptionAvailability) {
        this.subscriptionAvailability = subscriptionAvailability;
    }


        public MCPServerDTO subscriptionAvailableTenants(List<String> subscriptionAvailableTenants) {
        
        this.subscriptionAvailableTenants = subscriptionAvailableTenants;
        return this;
        }

    /**
        * Get subscriptionAvailableTenants
    * @return subscriptionAvailableTenants
    **/
        @javax.annotation.Nullable
      @ApiModelProperty(example = "[]", value = "")
    
    public List<String> getSubscriptionAvailableTenants() {
        return subscriptionAvailableTenants;
    }


    public void setSubscriptionAvailableTenants(List<String> subscriptionAvailableTenants) {
        this.subscriptionAvailableTenants = subscriptionAvailableTenants;
    }


        public MCPServerDTO additionalPropertiesMap(Map<String, APIInfoAdditionalPropertiesMapDTO> additionalPropertiesMap) {
        
        this.additionalPropertiesMap = additionalPropertiesMap;
        return this;
        }

    /**
        * Get additionalPropertiesMap
    * @return additionalPropertiesMap
    **/
        @javax.annotation.Nullable
      @ApiModelProperty(value = "")
    
    public Map<String, APIInfoAdditionalPropertiesMapDTO> getAdditionalPropertiesMap() {
        return additionalPropertiesMap;
    }


    public void setAdditionalPropertiesMap(Map<String, APIInfoAdditionalPropertiesMapDTO> additionalPropertiesMap) {
        this.additionalPropertiesMap = additionalPropertiesMap;
    }


        public MCPServerDTO monetization(APIMonetizationInfoDTO monetization) {
        
        this.monetization = monetization;
        return this;
        }

    /**
        * Get monetization
    * @return monetization
    **/
        @javax.annotation.Nullable
      @ApiModelProperty(value = "")
    
    public APIMonetizationInfoDTO getMonetization() {
        return monetization;
    }


    public void setMonetization(APIMonetizationInfoDTO monetization) {
        this.monetization = monetization;
    }


        public MCPServerDTO accessControl(AccessControlEnum accessControl) {
        
        this.accessControl = accessControl;
        return this;
        }

    /**
        * Is the MCP server restricted to certain publishers or creators or is it visible to all publishers and  creators. If the accessControl restriction is NONE, this can be modified by all publishers and creators. Otherwise, it can only be viewable/modifiable by a specific set of users based on the restriction. 
    * @return accessControl
    **/
        @javax.annotation.Nullable
      @ApiModelProperty(value = "Is the MCP server restricted to certain publishers or creators or is it visible to all publishers and  creators. If the accessControl restriction is NONE, this can be modified by all publishers and creators. Otherwise, it can only be viewable/modifiable by a specific set of users based on the restriction. ")
    
    public AccessControlEnum getAccessControl() {
        return accessControl;
    }


    public void setAccessControl(AccessControlEnum accessControl) {
        this.accessControl = accessControl;
    }


        public MCPServerDTO accessControlRoles(List<String> accessControlRoles) {
        
        this.accessControlRoles = accessControlRoles;
        return this;
        }

    /**
        * The user roles that are able to view/modify as publisher or creator.
    * @return accessControlRoles
    **/
        @javax.annotation.Nullable
      @ApiModelProperty(example = "[]", value = "The user roles that are able to view/modify as publisher or creator.")
    
    public List<String> getAccessControlRoles() {
        return accessControlRoles;
    }


    public void setAccessControlRoles(List<String> accessControlRoles) {
        this.accessControlRoles = accessControlRoles;
    }


        public MCPServerDTO businessInformation(APIBusinessInformationDTO businessInformation) {
        
        this.businessInformation = businessInformation;
        return this;
        }

    /**
        * Get businessInformation
    * @return businessInformation
    **/
        @javax.annotation.Nullable
      @ApiModelProperty(value = "")
    
    public APIBusinessInformationDTO getBusinessInformation() {
        return businessInformation;
    }


    public void setBusinessInformation(APIBusinessInformationDTO businessInformation) {
        this.businessInformation = businessInformation;
    }


        public MCPServerDTO corsConfiguration(APICorsConfigurationDTO corsConfiguration) {
        
        this.corsConfiguration = corsConfiguration;
        return this;
        }

    /**
        * Get corsConfiguration
    * @return corsConfiguration
    **/
        @javax.annotation.Nullable
      @ApiModelProperty(value = "")
    
    public APICorsConfigurationDTO getCorsConfiguration() {
        return corsConfiguration;
    }


    public void setCorsConfiguration(APICorsConfigurationDTO corsConfiguration) {
        this.corsConfiguration = corsConfiguration;
    }


        public MCPServerDTO workflowStatus(String workflowStatus) {
        
        this.workflowStatus = workflowStatus;
        return this;
        }

    /**
        * Get workflowStatus
    * @return workflowStatus
    **/
        @javax.annotation.Nullable
      @ApiModelProperty(example = "APPROVED", value = "")
    
    public String getWorkflowStatus() {
        return workflowStatus;
    }


    public void setWorkflowStatus(String workflowStatus) {
        this.workflowStatus = workflowStatus;
    }


        public MCPServerDTO protocolVersion(String protocolVersion) {
        
        this.protocolVersion = protocolVersion;
        return this;
        }

    /**
        * Get protocolVersion
    * @return protocolVersion
    **/
        @javax.annotation.Nullable
      @ApiModelProperty(value = "")
    
    public String getProtocolVersion() {
        return protocolVersion;
    }


    public void setProtocolVersion(String protocolVersion) {
        this.protocolVersion = protocolVersion;
    }


        public MCPServerDTO createdTime(String createdTime) {
        
        this.createdTime = createdTime;
        return this;
        }

    /**
        * Get createdTime
    * @return createdTime
    **/
        @javax.annotation.Nullable
      @ApiModelProperty(value = "")
    
    public String getCreatedTime() {
        return createdTime;
    }


    public void setCreatedTime(String createdTime) {
        this.createdTime = createdTime;
    }


        public MCPServerDTO lastUpdatedTimestamp(String lastUpdatedTimestamp) {
        
        this.lastUpdatedTimestamp = lastUpdatedTimestamp;
        return this;
        }

    /**
        * Get lastUpdatedTimestamp
    * @return lastUpdatedTimestamp
    **/
        @javax.annotation.Nullable
      @ApiModelProperty(value = "")
    
    public String getLastUpdatedTimestamp() {
        return lastUpdatedTimestamp;
    }


    public void setLastUpdatedTimestamp(String lastUpdatedTimestamp) {
        this.lastUpdatedTimestamp = lastUpdatedTimestamp;
    }


        public MCPServerDTO lastUpdatedTime(String lastUpdatedTime) {
        
        this.lastUpdatedTime = lastUpdatedTime;
        return this;
        }

    /**
        * Get lastUpdatedTime
    * @return lastUpdatedTime
    **/
        @javax.annotation.Nullable
      @ApiModelProperty(value = "")
    
    public String getLastUpdatedTime() {
        return lastUpdatedTime;
    }


    public void setLastUpdatedTime(String lastUpdatedTime) {
        this.lastUpdatedTime = lastUpdatedTime;
    }


        public MCPServerDTO subtypeConfiguration(SubtypeConfigurationDTO subtypeConfiguration) {
        
        this.subtypeConfiguration = subtypeConfiguration;
        return this;
        }

    /**
        * Get subtypeConfiguration
    * @return subtypeConfiguration
    **/
        @javax.annotation.Nullable
      @ApiModelProperty(value = "")
    
    public SubtypeConfigurationDTO getSubtypeConfiguration() {
        return subtypeConfiguration;
    }


    public void setSubtypeConfiguration(SubtypeConfigurationDTO subtypeConfiguration) {
        this.subtypeConfiguration = subtypeConfiguration;
    }


        public MCPServerDTO scopes(List<MCPServerScopeDTO> scopes) {
        
        this.scopes = scopes;
        return this;
        }

    /**
        * Get scopes
    * @return scopes
    **/
        @javax.annotation.Nullable
      @ApiModelProperty(value = "")
    
    public List<MCPServerScopeDTO> getScopes() {
        return scopes;
    }


    public void setScopes(List<MCPServerScopeDTO> scopes) {
        this.scopes = scopes;
    }


        public MCPServerDTO operations(List<MCPServerOperationDTO> operations) {
        
        this.operations = operations;
        return this;
        }

    /**
        * Get operations
    * @return operations
    **/
        @javax.annotation.Nullable
      @ApiModelProperty(example = "[{\"target\":\"listBooks\",\"feature\":\"TOOL\",\"authType\":\"Application & Application User\",\"throttlingPolicy\":\"Unlimited\"},{\"target\":\"addBook\",\"feature\":\"TOOL\",\"authType\":\"Application & Application User\",\"throttlingPolicy\":\"Unlimited\"}]", value = "")
    
    public List<MCPServerOperationDTO> getOperations() {
        return operations;
    }


    public void setOperations(List<MCPServerOperationDTO> operations) {
        this.operations = operations;
    }


        public MCPServerDTO categories(List<String> categories) {
        
        this.categories = categories;
        return this;
        }

    /**
        * MCP Server categories
    * @return categories
    **/
        @javax.annotation.Nullable
      @ApiModelProperty(value = "MCP Server categories")
    
    public List<String> getCategories() {
        return categories;
    }


    public void setCategories(List<String> categories) {
        this.categories = categories;
    }


        public MCPServerDTO keyManagers(Object keyManagers) {
        
        this.keyManagers = keyManagers;
        return this;
        }

    /**
        * Key Managers
    * @return keyManagers
    **/
        @javax.annotation.Nullable
      @ApiModelProperty(value = "Key Managers")
    
    public Object getKeyManagers() {
        return keyManagers;
    }


    public void setKeyManagers(Object keyManagers) {
        this.keyManagers = keyManagers;
    }


        public MCPServerDTO gatewayVendor(String gatewayVendor) {
        
        this.gatewayVendor = gatewayVendor;
        return this;
        }

    /**
        * Get gatewayVendor
    * @return gatewayVendor
    **/
        @javax.annotation.Nullable
      @ApiModelProperty(example = "wso2 external", value = "")
    
    public String getGatewayVendor() {
        return gatewayVendor;
    }


    public void setGatewayVendor(String gatewayVendor) {
        this.gatewayVendor = gatewayVendor;
    }


        public MCPServerDTO gatewayType(String gatewayType) {
        
        this.gatewayType = gatewayType;
        return this;
        }

    /**
        * The gateway type selected for the policies. Accepts one of the following: wso2/synapse, wso2/apk, AWS. 
    * @return gatewayType
    **/
        @javax.annotation.Nullable
      @ApiModelProperty(example = "wso2/synapse wso2/apk AWS", value = "The gateway type selected for the policies. Accepts one of the following: wso2/synapse, wso2/apk, AWS. ")
    
    public String getGatewayType() {
        return gatewayType;
    }


    public void setGatewayType(String gatewayType) {
        this.gatewayType = gatewayType;
    }


        public MCPServerDTO initiatedFromGateway(Boolean initiatedFromGateway) {
        
        this.initiatedFromGateway = initiatedFromGateway;
        return this;
        }

    /**
        * Whether the MCP Server is initiated from the gateway or not. This is used to identify whether the MCP Server is created from the publisher or discovered from the gateway. 
    * @return initiatedFromGateway
    **/
        @javax.annotation.Nullable
      @ApiModelProperty(example = "false", value = "Whether the MCP Server is initiated from the gateway or not. This is used to identify whether the MCP Server is created from the publisher or discovered from the gateway. ")
    
    public Boolean isInitiatedFromGateway() {
        return initiatedFromGateway;
    }


    public void setInitiatedFromGateway(Boolean initiatedFromGateway) {
        this.initiatedFromGateway = initiatedFromGateway;
    }


    @Override
    public boolean equals(Object o) {
        if (this == o) {
        return true;
        }
        if (o == null || getClass() != o.getClass()) {
        return false;
        }
            MCPServerDTO mcPServer = (MCPServerDTO) o;
            return Objects.equals(this.id, mcPServer.id) &&
            Objects.equals(this.name, mcPServer.name) &&
            Objects.equals(this.displayName, mcPServer.displayName) &&
            Objects.equals(this.description, mcPServer.description) &&
            Objects.equals(this.context, mcPServer.context) &&
            Objects.equals(this.endpointConfig, mcPServer.endpointConfig) &&
            Objects.equals(this.version, mcPServer.version) &&
            Objects.equals(this.provider, mcPServer.provider) &&
            Objects.equals(this.lifeCycleStatus, mcPServer.lifeCycleStatus) &&
            Objects.equals(this.hasThumbnail, mcPServer.hasThumbnail) &&
            Objects.equals(this.isDefaultVersion, mcPServer.isDefaultVersion) &&
            Objects.equals(this.isRevision, mcPServer.isRevision) &&
            Objects.equals(this.revisionedMCPServerId, mcPServer.revisionedMCPServerId) &&
            Objects.equals(this.revisionId, mcPServer.revisionId) &&
            Objects.equals(this.enableSchemaValidation, mcPServer.enableSchemaValidation) &&
            Objects.equals(this.audiences, mcPServer.audiences) &&
            Objects.equals(this.transport, mcPServer.transport) &&
            Objects.equals(this.tags, mcPServer.tags) &&
            Objects.equals(this.policies, mcPServer.policies) &&
            Objects.equals(this.organizationPolicies, mcPServer.organizationPolicies) &&
            Objects.equals(this.throttlingPolicy, mcPServer.throttlingPolicy) &&
            Objects.equals(this.authorizationHeader, mcPServer.authorizationHeader) &&
            Objects.equals(this.apiKeyHeader, mcPServer.apiKeyHeader) &&
            Objects.equals(this.securityScheme, mcPServer.securityScheme) &&
            Objects.equals(this.maxTps, mcPServer.maxTps) &&
            Objects.equals(this.visibility, mcPServer.visibility) &&
            Objects.equals(this.visibleRoles, mcPServer.visibleRoles) &&
            Objects.equals(this.visibleTenants, mcPServer.visibleTenants) &&
            Objects.equals(this.visibleOrganizations, mcPServer.visibleOrganizations) &&
            Objects.equals(this.mcpServerPolicies, mcPServer.mcpServerPolicies) &&
            Objects.equals(this.subscriptionAvailability, mcPServer.subscriptionAvailability) &&
            Objects.equals(this.subscriptionAvailableTenants, mcPServer.subscriptionAvailableTenants) &&
            Objects.equals(this.additionalPropertiesMap, mcPServer.additionalPropertiesMap) &&
            Objects.equals(this.monetization, mcPServer.monetization) &&
            Objects.equals(this.accessControl, mcPServer.accessControl) &&
            Objects.equals(this.accessControlRoles, mcPServer.accessControlRoles) &&
            Objects.equals(this.businessInformation, mcPServer.businessInformation) &&
            Objects.equals(this.corsConfiguration, mcPServer.corsConfiguration) &&
            Objects.equals(this.workflowStatus, mcPServer.workflowStatus) &&
            Objects.equals(this.protocolVersion, mcPServer.protocolVersion) &&
            Objects.equals(this.createdTime, mcPServer.createdTime) &&
            Objects.equals(this.lastUpdatedTimestamp, mcPServer.lastUpdatedTimestamp) &&
            Objects.equals(this.lastUpdatedTime, mcPServer.lastUpdatedTime) &&
            Objects.equals(this.subtypeConfiguration, mcPServer.subtypeConfiguration) &&
            Objects.equals(this.scopes, mcPServer.scopes) &&
            Objects.equals(this.operations, mcPServer.operations) &&
            Objects.equals(this.categories, mcPServer.categories) &&
            Objects.equals(this.keyManagers, mcPServer.keyManagers) &&
            Objects.equals(this.gatewayVendor, mcPServer.gatewayVendor) &&
            Objects.equals(this.gatewayType, mcPServer.gatewayType) &&
            Objects.equals(this.initiatedFromGateway, mcPServer.initiatedFromGateway);
    }

    @Override
    public int hashCode() {
        return Objects.hash(id, name, displayName, description, context, endpointConfig, version, provider, lifeCycleStatus, hasThumbnail, isDefaultVersion, isRevision, revisionedMCPServerId, revisionId, enableSchemaValidation, audiences, transport, tags, policies, organizationPolicies, throttlingPolicy, authorizationHeader, apiKeyHeader, securityScheme, maxTps, visibility, visibleRoles, visibleTenants, visibleOrganizations, mcpServerPolicies, subscriptionAvailability, subscriptionAvailableTenants, additionalPropertiesMap, monetization, accessControl, accessControlRoles, businessInformation, corsConfiguration, workflowStatus, protocolVersion, createdTime, lastUpdatedTimestamp, lastUpdatedTime, subtypeConfiguration, scopes, operations, categories, keyManagers, gatewayVendor, gatewayType, initiatedFromGateway);
    }


@Override
public String toString() {
StringBuilder sb = new StringBuilder();
sb.append("class MCPServerDTO {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    context: ").append(toIndentedString(context)).append("\n");
    sb.append("    endpointConfig: ").append(toIndentedString(endpointConfig)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("    provider: ").append(toIndentedString(provider)).append("\n");
    sb.append("    lifeCycleStatus: ").append(toIndentedString(lifeCycleStatus)).append("\n");
    sb.append("    hasThumbnail: ").append(toIndentedString(hasThumbnail)).append("\n");
    sb.append("    isDefaultVersion: ").append(toIndentedString(isDefaultVersion)).append("\n");
    sb.append("    isRevision: ").append(toIndentedString(isRevision)).append("\n");
    sb.append("    revisionedMCPServerId: ").append(toIndentedString(revisionedMCPServerId)).append("\n");
    sb.append("    revisionId: ").append(toIndentedString(revisionId)).append("\n");
    sb.append("    enableSchemaValidation: ").append(toIndentedString(enableSchemaValidation)).append("\n");
    sb.append("    audiences: ").append(toIndentedString(audiences)).append("\n");
    sb.append("    transport: ").append(toIndentedString(transport)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    policies: ").append(toIndentedString(policies)).append("\n");
    sb.append("    organizationPolicies: ").append(toIndentedString(organizationPolicies)).append("\n");
    sb.append("    throttlingPolicy: ").append(toIndentedString(throttlingPolicy)).append("\n");
    sb.append("    authorizationHeader: ").append(toIndentedString(authorizationHeader)).append("\n");
    sb.append("    apiKeyHeader: ").append(toIndentedString(apiKeyHeader)).append("\n");
    sb.append("    securityScheme: ").append(toIndentedString(securityScheme)).append("\n");
    sb.append("    maxTps: ").append(toIndentedString(maxTps)).append("\n");
    sb.append("    visibility: ").append(toIndentedString(visibility)).append("\n");
    sb.append("    visibleRoles: ").append(toIndentedString(visibleRoles)).append("\n");
    sb.append("    visibleTenants: ").append(toIndentedString(visibleTenants)).append("\n");
    sb.append("    visibleOrganizations: ").append(toIndentedString(visibleOrganizations)).append("\n");
    sb.append("    mcpServerPolicies: ").append(toIndentedString(mcpServerPolicies)).append("\n");
    sb.append("    subscriptionAvailability: ").append(toIndentedString(subscriptionAvailability)).append("\n");
    sb.append("    subscriptionAvailableTenants: ").append(toIndentedString(subscriptionAvailableTenants)).append("\n");
    sb.append("    additionalPropertiesMap: ").append(toIndentedString(additionalPropertiesMap)).append("\n");
    sb.append("    monetization: ").append(toIndentedString(monetization)).append("\n");
    sb.append("    accessControl: ").append(toIndentedString(accessControl)).append("\n");
    sb.append("    accessControlRoles: ").append(toIndentedString(accessControlRoles)).append("\n");
    sb.append("    businessInformation: ").append(toIndentedString(businessInformation)).append("\n");
    sb.append("    corsConfiguration: ").append(toIndentedString(corsConfiguration)).append("\n");
    sb.append("    workflowStatus: ").append(toIndentedString(workflowStatus)).append("\n");
    sb.append("    protocolVersion: ").append(toIndentedString(protocolVersion)).append("\n");
    sb.append("    createdTime: ").append(toIndentedString(createdTime)).append("\n");
    sb.append("    lastUpdatedTimestamp: ").append(toIndentedString(lastUpdatedTimestamp)).append("\n");
    sb.append("    lastUpdatedTime: ").append(toIndentedString(lastUpdatedTime)).append("\n");
    sb.append("    subtypeConfiguration: ").append(toIndentedString(subtypeConfiguration)).append("\n");
    sb.append("    scopes: ").append(toIndentedString(scopes)).append("\n");
    sb.append("    operations: ").append(toIndentedString(operations)).append("\n");
    sb.append("    categories: ").append(toIndentedString(categories)).append("\n");
    sb.append("    keyManagers: ").append(toIndentedString(keyManagers)).append("\n");
    sb.append("    gatewayVendor: ").append(toIndentedString(gatewayVendor)).append("\n");
    sb.append("    gatewayType: ").append(toIndentedString(gatewayType)).append("\n");
    sb.append("    initiatedFromGateway: ").append(toIndentedString(initiatedFromGateway)).append("\n");
sb.append("}");
return sb.toString();
}

/**
* Convert the given object to string with each line indented by 4 spaces
* (except the first line).
*/
private String toIndentedString(Object o) {
if (o == null) {
return "null";
}
return o.toString().replace("\n", "\n    ");
}

}

